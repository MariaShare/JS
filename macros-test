/** @OnlyCurrentDoc */
var f = 0
var g = 0

function x_func(a, b, c, i) {
  var spreadsheet = SpreadsheetApp.getActive();
  x = 0
  if (a + 1 < c * b) {
    x = a + b + c;   
    spreadsheet.getRange('H'+ String(i + 2)).setValue(String(x.toFixed(2)).replace(".", ","));
    f = 1
  }
  else {
    x = (a - b)/(a - c);
    spreadsheet.getRange('I'+ String(i + 2)).setValue(String(x.toFixed(2)).replace(".", ","));
    f = 2
  }
  return String(x.toFixed(2)).replace(".", ",")
};

function z_func(x, a, b, c, i) {
  var spreadsheet = SpreadsheetApp.getActive();
  z = 0
  if (x < 2) {
    z = a* Math.pow(x, 2) + b*x + c;
    spreadsheet.getRange('D'+ String(i + 2)).setValue(z);
    g = 1
  }
  else if (2<=x & x <=4) {
    z = b* Math.pow(x, 2) + a*x + c;
    spreadsheet.getRange('E'+ String(i + 2)).setValue(z);
    g = 2
  }
  else if (x > 4) {
    z = c* Math.pow(x, 2) + a*x + b
    spreadsheet.getRange('F'+ String(i + 2)).setValue(z);
    g = 3
  }
};

function lab2_cicle() {
  var spreadsheet = SpreadsheetApp.getActive();
  comb = 0
  k = 0
  for(let i = 1; i <= 6; i++){
    while (comb != i) {
      a = String(random(-5, 10).toFixed(1)).replace(".", ",")
      b = String(random(-5, 10).toFixed(1)).replace(".", ",")
      c = String(random(-5, 10).toFixed(1)).replace(".", ",")
     if (i == 1) {
      a = spreadsheet.getRange('B2').getValue();
      b = spreadsheet.getRange('B3').getValue();
      c = spreadsheet.getRange('B4').getValue();
      x = x_func(parseFloat(a), parseFloat(b), parseFloat(c), i)
      z_func(parseFloat(String(x).replace(",", ".")), parseFloat(a), parseFloat(b), parseFloat(c), i)
     }
     else {
      spreadsheet.getRange('B' + String(i + 3 + k)).setValue(a);
      spreadsheet.getRange('B' + String(i + 4 + k)).setValue(b);
      spreadsheet.getRange('B' + String(i + 5 + k)).setValue(c);
      k += 2
      x = x_func(parseFloat(String(a).replace(",", ".")),parseFloat(String(b).replace(",", ".")),parseFloat(String(c).replace(",", ".")), i)
      z_func(parseFloat(String(x).replace(",", ".")), parseFloat(String(a).replace(",", ".")), parseFloat(String(b).replace(",", ".")), parseFloat(String(c).replace(",", ".")), i)
     }
     if (checkVars(f, g)){
       comb = i
       Logger.log(a)
       Logger.log(b)
       Logger.log(c)
       Logger.log(x) 
     }
     else{
       spreadsheet.getRange('D'+ String(i + 2)).clear();
       spreadsheet.getRange('E'+ String(i + 2)).clear();
       spreadsheet.getRange('F'+ String(i + 2)).clear();
       spreadsheet.getRange('H'+ String(i + 2)).clear();
       spreadsheet.getRange('I'+ String(i + 2)).clear();
       k -= 2
     }
    }
  }
};

const vars = {
    '1' : 0,
    '2' : 0,
    '3' : 0,
    '4' : 0,
    '5' : 0,
    '6' : 0
  };

function checkVars(x, z) {
  if (x == 1 & z == 1 &  vars['1'] == 0) {
    null_f_g()
    vars['1'] = 1;
    return true
  }
  else if (x == 1 & z == 2 & vars['2'] == 0){
    null_f_g()
    vars['2'] = 1;
    return true
  }
  else if (x == 1 & z == 3 & vars['3'] == 0){
    null_f_g()
    vars['3'] = 1;
    return true
  }
  else if (x == 2 & z == 1 & vars['4'] == 0){
    null_f_g()
    vars['4'] = 1;
    return true
  }
  else if (x == 2 & z == 2 & vars['5'] == 0){
    null_f_g()
    vars['5'] = 1;
    return true
  }
  else if (x == 2 & z == 3 & vars['6'] == 0){
    null_f_g()
    vars['6'] = 1;
    return true
  }
  else {
    null_f_g()
    return false
  }
};

function null_f_g(){
  f = 0
  g = 0
};

function random(min, max) {
  return min + Math.random() * (max - min);
};


function purchase_trend_chart1() {
  var spreadsheet = SpreadsheetApp.getActive();
 SpreadsheetApp.setActiveSheet(spreadsheet.getSheets()[3]);
 var sheet = spreadsheet.getActiveSheet();

 a = sheet.getRange('B1').getValue()
 b = sheet.getRange('B2').getValue()
 h = sheet.getRange('B3').getValue()
 sheet.getRange('A1:B3').clear()

 sheet.getRange('A1').setValue('x')
 sheet.getRange('B1').setValue('F(x)')
 i = 2
 while (a <= b){
  sheet.getRange("B" + String(i)).setValue(a / Math.cos(a));
  sheet.getRange("A" + String(i)).setValue(a);
  a += h
  i += 1
 }

 var chart = sheet.newChart()
 .asLineChart()
 .addRange(sheet.getRange('A1:B' + String(i)))
 .setMergeStrategy(Charts.ChartMergeStrategy.MERGE_COLUMNS)
 .setTransposeRowsAndColumns(false)
 .setNumHeaders(1)
 .setHiddenDimensionStrategy(Charts.ChartHiddenDimensionStrategy.IGNORE_BOTH)
 .setOption('bubble.stroke', '#000000')
 .setOption('useFirstColumnAsDomain', true)
 .setOption('isStacked', 'false')
 .setOption('title', 'F(x)= x/cos(x)')
 .setOption('annotations.domain.textStyle.color', '#808080')
 .setOption('textStyle.color', '#000000')
 .setOption('legend.textStyle.color', '#1a1a1a')
 .setOption('titleTextStyle.color', '#757575')
 .setOption('annotations.total.textStyle.color', '#808080')
 .setXAxisTitle('x')
 .setOption('hAxis.textStyle.color', '#000000')
 .setYAxisTitle('F(x)')
 .setOption('vAxes.0.textStyle.color', '#000000')
 .setPosition(2, 9, 88, 16)
 .build();
 sheet.insertChart(chart);
};

function myFunction() {
  var spreadsheet = SpreadsheetApp.getActive();
  spreadsheet.getRange('A1:B1').activate();
};
